@page "/car-tool"

@inject ICarsData carsInMemoryData

@using ToolsApp.Core.Interfaces.Data
@using ToolsApp.Core.Interfaces.Models
@using ToolsApp.Models
@using ToolsApp.Components.CarTool
@using ToolsApp.Components.Shared

<ToolHeader HeaderText="Car Tool" />

<CarTable Cars="@cars" EditCarId="@editCarId"
  OnSaveCar="@saveCar" OnCancelCar="@cancelCar"
  OnEditCar="@editCar" OnDeleteCar="@deleteCar" />

<CarForm ButtonText="Add Car" OnSubmitCar="@addCar" />

@code {

  private int editCarId { get; set; } = -1;

  private IEnumerable<ICar> cars { get; set; } = new List<ICar>();

  protected override async Task OnInitializedAsync()
  {
    cars = await carsInMemoryData.All();
  }

  private void editCar(int carId)
  {
    editCarId = carId;
  }

  private void cancelCar()
  {
    editCarId = -1;
  }

  private async void addCar(INewCar newCar)
  {
    await carsInMemoryData.Append(newCar);
    cars = await carsInMemoryData.All();
    editCarId = -1;
  }

  private async void saveCar(ICar car)
  {
    await carsInMemoryData.Replace(car);
    cars = await carsInMemoryData.All();
    editCarId = -1;
  }

  private async void deleteCar(int carId)
  {
    await carsInMemoryData.Remove(carId);
    cars = await carsInMemoryData.All();
    editCarId = -1;
  }
}
