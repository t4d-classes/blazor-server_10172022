@using AutoMapper;

@using ToolsApp.Core.Interfaces.Models
@using ToolsApp.Models;

<form>
  <label>
    Name:
    <input type="text" @bind="@colorForm.Name" />
  </label>
  <label>
    Hex Code:
    <input type="text" @bind="@colorForm.HexCode" />
  </label>
  <button type="button" @onclick="@submitColor">@ButtonText</button>
</form>

@code {

  [Parameter]
  public string ButtonText { get; set; } = "Add Color";

  [Parameter]
  public EventCallback<INewColor> OnSubmitColor { get; set; }

  private IMapper mapper;

  private ColorFormModel colorForm = new();

  protected override void OnInitialized()
  {
    var mapperConfig = new MapperConfiguration(config => {
      config.CreateMap<ColorFormModel, NewColor>();
    });

    mapper = mapperConfig.CreateMapper();
  }

  private async Task submitColor()
  {
    await OnSubmitColor.InvokeAsync(mapper.Map<NewColor>(colorForm));
  }

  class ColorFormModel
  {
    public string Name { get; set; }
    public string HexCode { get; set; }
  }

}
